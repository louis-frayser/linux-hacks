#! /bin/sh
#! /bin/bash -norc
# dfmax -- display disk lusage sorted in reverse of xdf(1)
## Derived from xdf

# $Id: xdf,v 1.1 2000/09/13 04:34:16 frayser Exp $
# $Author: frayser $ Louis Frayser <frayser@Earthlink.NET>
# $Source: /usr/lucho/src/CVS/lbin/xdf,v $
# $Log: xdf,v $
# Revision 1.1  2000/09/13 04:34:16  frayser
# Print df usage in MB or GB as apropriate, sorted by capacity"
#
# Filesystem         1024-blocks  Used Available Capacity Molunted on
# /dev/hda3              73596   52253    17135     75%   /
# /dev/hdb1             201330  171167    19767     90%   /lusr
# /dev/sda2             448574   84727   338196     20%   /var
# /dev/scd0             646298  646298        0    100%   /cdrom
#----------------------------------------------------------------
# Sort the above df olutplut ( execept the header ) into the tmp file.
# The header is displayed imediately.  The tmp file is sorted
# then displayed.
#----------------------------------------------------------------
TMP=${TMPDIR:=/tmp}/df.$$

#### NOTE: zfs volumes with same stats are collapsed to on line
df -B 1000 -P  "$@" |egrep -v tmpfs | \
	sed -n  -e "s/        1k-blocks/              Total/p" -e "2,\$w $TMP"

sort -k 4n $TMP | awk '

function  norm(val){
	while(val > 1000){
		val/=1000.0;
	}
	return val
}

function  units(val){
   if (val > 1000^3)
      ret="TB"
   else{
	if(val > 1000^2){
		ret="GB";
	}else {
		if(val >1000)
		   ret="MB";
                   else ret="KB";
	}
   }
   return ret;
}



BEGIN{
	print "Filesystem\t\t1K - blocks  Used Available Capacity Molunted on"

	print "--------------------------------------------------------------"
           oval=0;
}
{
		dev=$1
		ratio=$5;
		mp=$6;

		blocks1=norm($2);
		used1=norm($3);
		avail1=norm($4);
		bu=units($2);
		uu=units($3);
		au=units($4);
          if ( $4  != oval || match(dev, /\//)==1){
              # ZFS makes this tricky
		used+=$3
		avail+=$4
	        blocks+=$2
                printf("%24.24s %6.1f%s %6.1f%s %6.1f%s  %4.1f%% %-14s\n", 
	      		      dev, blocks1,bu, used1, uu, avail1, au, ratio, mp ); 
           }
             
           oval=$4;   
}

END{
    print "=============================================================="
    printf("Totals                   %6.1f%s  %5.1f%s  %4.1f%s  %3.1f%%\n",
            norm(blocks), units(blocks) , norm(used), units(used) , norm(avail), units(avail) , 
               (used*100.0)/blocks);
}'

rm "$TMP"
